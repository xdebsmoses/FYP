{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAE/D,OAAO,yBAAyB,MAAM,6BAA6B,CAAC;AAEpE,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,yBAAyB,CAAC,CAAC;AAM5D,MAAM,UAAU,kBAAkB;IAChC,OAAO,yBAAyB,CAAC,kBAAkB,EAAE,CAAC;AACxD,CAAC;AAED,MAAM,UAAU,gBAAgB;IAC9B,OAAO,yBAAyB,CAAC,gBAAgB,EAAE,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,eAAe;IAC7B,OAAO,yBAAyB,CAAC,eAAe,EAAE,CAAC;AACrD,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,QAA0C;IAE1C,OAAO,OAAO,CAAC,WAAW,CAAkB,eAAe,EAAE,QAAQ,CAAC,CAAC;AACzE,CAAC","sourcesContent":["import { EventEmitter, Subscription } from \"expo-modules-core\";\n\nimport ExpoSamplePedometerModule from \"./ExpoSamplePedometerModule\";\n\nconst emitter = new EventEmitter(ExpoSamplePedometerModule);\n\nexport type StepChangeEvent = {\n  step: number;\n};\n\nexport function requestPermissions() {\n  return ExpoSamplePedometerModule.requestPermissions();\n}\n\nexport function startSendingData() {\n  return ExpoSamplePedometerModule.startSendingData();\n}\n\nexport function stopSendingData() {\n  return ExpoSamplePedometerModule.stopSendingData();\n}\n\nexport function addStepChangedListener(\n  listener: (event: StepChangeEvent) => void\n): Subscription {\n  return emitter.addListener<StepChangeEvent>(\"onStepCounted\", listener);\n}\n"]}